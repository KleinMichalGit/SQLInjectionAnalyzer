<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.props" Condition="Exists('..\packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{473B91EA-F240-4E98-9EF8-C3C6932DBA28}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>UnitTests</RootNamespace>
    <AssemblyName>UnitTests</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">15.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <ReferencePath>$(ProgramFiles)\Common Files\microsoft shared\VSTT\$(VisualStudioVersion)\UITestExtensionPackages</ReferencePath>
    <IsCodedUITest>False</IsCodedUITest>
    <TestProjectType>UnitTest</TestProjectType>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.VisualStudio.TestPlatform.TestFramework, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\packages\MSTest.TestFramework.2.2.7\lib\net45\Microsoft.VisualStudio.TestPlatform.TestFramework.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.TestPlatform.TestFramework.Extensions, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>..\packages\MSTest.TestFramework.2.2.7\lib\net45\Microsoft.VisualStudio.TestPlatform.TestFramework.Extensions.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="AnalyzerTestHelper.cs" />
    <Compile Include="CodeToBeAnalysed\AssignmentRules\SafeAssignment\SafeAssignment1.cs" />
    <Compile Include="CodeToBeAnalysed\AssignmentRules\VulnerableAssignment\VulnerableAssignment2.cs" />
    <Compile Include="CodeToBeAnalysed\AssignmentRules\VulnerableAssignment\VulnerableAssignment1.cs" />
    <Compile Include="CodeToBeAnalysed\CleaningRules\AllArgumentsAreCleaned\ArgumentsAreCleaned1.cs" />
    <Compile Include="CodeToBeAnalysed\CleaningRules\AllArgumentsAreCleaned\ArgumentsAreCleaned2.cs" />
    <Compile Include="CodeToBeAnalysed\CleaningRules\NotAllArgumentsAreCleaned\NotAllArgumentsAreCleanedClass.cs" />
    <Compile Include="CodeToBeAnalysed\Complex\ComplexAnalysis1.cs" />
    <Compile Include="CodeToBeAnalysed\ConditionalExpressionRules\SafeConditionalExpression\SafeConditionalExpressionClass.cs" />
    <Compile Include="CodeToBeAnalysed\ConditionalExpressionRules\VulnerableConditionalExpression\VulnerableConditionalExpressionClass.cs" />
    <Compile Include="CodeToBeAnalysed\CreationRules\SafeCreationRules\SafeCreationClass.cs" />
    <Compile Include="CodeToBeAnalysed\CreationRules\VulnerableCreationRules\VulnerableCreationClass.cs" />
    <Compile Include="CodeToBeAnalysed\ExcludingPaths\ExcludingPaths1\ThisClassWillBeScanned.cs" />
    <Compile Include="CodeToBeAnalysed\ExcludingPaths\ExcludingPaths2\ThisClassWillNotBeScanned.cs" />
    <Compile Include="CodeToBeAnalysed\FindOriginRules\SafeFindOriginRules\SafeFindOriginClass.cs" />
    <Compile Include="CodeToBeAnalysed\FindOriginRules\VulnerableFindOriginRules\VulnerableFindOriginClass.cs" />
    <Compile Include="CodeToBeAnalysed\InvocationRules\InvocationTestClass.cs" />
    <Compile Include="CodeToBeAnalysed\InvocationRules\InvocationTestClass2.cs" />
    <Compile Include="CodeToBeAnalysed\InvocationRules\InvocationTestClass3.cs" />
    <Compile Include="CodeToBeAnalysed\OneSafeMethod\SimpleClass.cs" />
    <Compile Include="CodeToBeAnalysed\OneVulnerableMethod\SimpleClass.cs" />
    <Compile Include="ConfigFileReaderTest.cs" />
    <Compile Include="ExpectedDiagnostics\ExpectedDiagnosticsOneMethodSyntaxTreeAnalysis.cs" />
    <Compile Include="InputReaderTest.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="OneMethodSyntaxTreeAnalyzerTest.cs" />
    <Compile Include="TaintPropagationRulesExamples\TaintPropagationRulesCreator.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config" />
    <None Include="ConfigFileExamples\InvalidConfigFiles\config2.json" />
    <None Include="ConfigFileExamples\InvalidConfigFiles\config3.json" />
    <None Include="ConfigFileExamples\InvalidConfigFiles\config4.json" />
    <None Include="ConfigFileExamples\ValidConfigFiles\config1.json" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\ExceptionService\ExceptionService.csproj">
      <Project>{527248C1-BB1E-4ED3-8FAA-1E3469E025DD}</Project>
      <Name>ExceptionService</Name>
    </ProjectReference>
    <ProjectReference Include="..\InputService\InputService.csproj">
      <Project>{79B7DA22-E418-40AB-A305-98FEC865147D}</Project>
      <Name>InputService</Name>
    </ProjectReference>
    <ProjectReference Include="..\Model\Model.csproj">
      <Project>{536B46B7-7816-4273-932F-11CBE4155D38}</Project>
      <Name>Model</Name>
    </ProjectReference>
    <ProjectReference Include="..\OutputService\OutputService.csproj">
      <Project>{B0A275CC-F0CB-4C9F-816A-7649981D5F8B}</Project>
      <Name>OutputService</Name>
    </ProjectReference>
    <ProjectReference Include="..\SQLInjectionAnalyzer\SQLInjectionAnalyzer.csproj">
      <Project>{4CCA4842-29BA-4A89-B72A-06A11A9B1497}</Project>
      <Name>SQLInjectionAnalyzer</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup />
  <ItemGroup>
    <Content Include="CodeToBeAnalysed\IntentionalyLeftEmptyFolder\IntentionalyLeftEmptyFolder.txt" />
  </ItemGroup>
  <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.props'))" />
    <Error Condition="!Exists('..\packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.targets'))" />
  </Target>
  <Import Project="..\packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.targets" Condition="Exists('..\packages\MSTest.TestAdapter.2.2.7\build\net45\MSTest.TestAdapter.targets')" />
</Project>